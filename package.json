{
  "name": "authelia-oidc-examples",
  "version": "1.0.0",
  "description": "POC for implementing OIDC with Authelia",
  "main": "index.js",
  "scripts": {
    "precertgen": "mkdir ./traefik/certs && mkdir ./ca",
    "certgen": "mkcert create-ca && mkcert create-cert --domains example.local,*.example.local",
    "postcertgen": "mv ./ca.crt ./ca/cert.pem && mv ./ca.key ./ca/key.pem && mv ./cert.crt ./traefik/certs/cert.pem && mv ./cert.key ./traefik/certs/key.pem",
    
    "prekeygen": "if [[ -f ./authelia/private.pem ]]; then rm ./authelia/*.pem; fi;",
    "keygen": "docker run --rm -u \"$(id -u):$(id -g)\" -v \"$(pwd)\":/keys authelia/authelia:latest authelia crypto pair rsa generate --bits 4096 --directory /keys",
    "postkeygen": "mv ./private.pem ./authelia/private.pem && mv ./public.pem ./authelia/public.pem",

    "secret-generator": "openssl rand -hex 32",

    "genjwt": "if [[ ! -f ./.local/secrets/JWT_SECRET ]]; then npm run --silent secret-generator -- > ./.local/secrets/JWT_SECRET; fi;",
    "gensession": "if [[ ! -f ./.local/secrets/SESSION_SECRET ]]; then npm run --silent secret-generator -- > ./.local/secrets/SESSION_SECRET; fi;",
    "genstorage": "if [[ ! -f ./.local/secrets/STORAGE_ENCRYPTION_KEY ]]; then npm run --silent secret-generator -- > ./.local/secrets/STORAGE_ENCRYPTION_KEY; fi;",
    "genoutlinekey": "echo \"SECRET_KEY=$(npm run --silent secret-generator)\" >> ./.local/secrets/outline.env",
    "genoutlineutils": "echo \"UTILS_SECRET=$(npm run --silent secret-generator)\" >> ./.local/secrets/outline.env",
    "genoutline": "if [[ ! -f ./.local/secrets/outline.env ]]; then touch ./.local/secrets/outline.env && npm run genoutlinekey && npm run genoutlineutils; fi;",

    "gen-secrets": "npm run genjwt && npm run gensession && npm run genstorage && npm run genoutline",

    "preinstall": "mkdir -p ./.local/logs/authelia ./.local/secrets",
    "postinstall": "npm run keygen && npm run certgen && npm run gen-secrets",

    "start:caddy": "docker compose -f compose.yaml -f caddy.yaml up -d",
    "start:traefik": "docker compose -f compose.yaml -f traefik.yaml up -d",

    "stop": "docker compose down && docker compose down",

    "nuke": "rm -rf ./.local ./authelia/db.sqlite ./authelia/notification.txt ./authelia/*.pem ./ca ./s3 ./secrets ./package-lock.json ./node_modules ./traefik/certs"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/binaryben/authelia-oidc-examples.git"
  },
  "author": "Benny Michaels <npm@bnry.be> (https://bnry.be)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/binaryben/authelia-oidc-examples/issues"
  },
  "homepage": "https://github.com/binaryben/authelia-oidc-examples#readme",
  "dependencies": {
    "mkcert": "^1.5.0"
  }
}
